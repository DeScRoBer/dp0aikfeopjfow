(function () {
    'use strict';

    const clientId = '1400298707819302933';
    const redirectUri = 'https://descrober.github.io/dp0aikfeopjfow/discord-auth.html';
    const apiUrl = 'https://adadadadad-97sj.onrender.com/verify';
    const externalScriptUrl = 'https://descrober.github.io/dp0aikfeopjfow/dadwadfafaf.js';
    const storageKey = 'nerest_discord_id';

    const blocker = document.createElement('div');
    Object.assign(blocker.style, {
        position: 'fixed', top: 0, left: 0, width: '100%', height: '100%',
        backgroundColor: '#000', color: 'white', fontFamily: 'monospace',
        fontSize: '18px', display: 'flex', flexDirection: 'column',
        justifyContent: 'center', alignItems: 'center', zIndex: 9999999, textAlign: 'center',
        padding: '30px'
    });

    blocker.innerHTML = `
        <div style="font-size: 30px; font-weight: bold; color: #0ff; margin-bottom: 20px;">
            ‚ö° NEREST PROJECT ‚ö°
        </div>
        ‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...
        <div id="status" style="margin-top: 20px;"></div>
        <div style="position: absolute; bottom: 20px; font-size: 14px;">
            üîó <a href="https://guns.lol/mr.negotiv" target="_blank" style="color: #0ff;">guns.lol/mr.negotiv</a>
        </div>
    `;

    document.body.appendChild(blocker);

    const statusEl = blocker.querySelector('#status');

    const params = new URLSearchParams(window.location.search);
    const urlId = params.get('discord_id');
    if (urlId) {
        localStorage.setItem(storageKey, urlId);
        window.history.replaceState({}, document.title, window.location.pathname);
    }

    async function verifyAccess(userId) {
        try {
            const res = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: userId })
            });

            if (!res.ok) throw new Error(`HTTP ${res.status}`);
            const data = await res.json();
            return data.status === 'approved';
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API:', err);
            throw err;
        }
    }

    async function run() {
        const userId = localStorage.getItem(storageKey);

        if (!userId) {
            window.location.href = `https://discord.com/oauth2/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&response_type=token&scope=identify`;
            return;
        }

        statusEl.innerHTML = `
            üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Discord ID:<br>
            <code style="font-size: 20px; background: #222; padding: 8px 12px; border-radius: 6px;">${userId}</code>
        `;

        try {
            const approved = await verifyAccess(userId);

            if (approved) {
    statusEl.innerHTML = `‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω. –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞...`;

    // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º heartbeat
    fetch("https://expected-kara-lynn-anus23323-840ae195.koyeb.app/heartbeat", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
            discord_id: userId,
            timestamp: Date.now()
        })
    }).then(res => {
        if (!res.ok) console.error("‚ùå Heartbeat failed");
    }).catch(err => console.error("‚ùå Error sending heartbeat:", err));

    // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
    const s = document.createElement('script');
    s.src = externalScriptUrl;
    document.body.appendChild(s);

    blocker.remove();

// ‚è± –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
setInterval(async () => {
    try {
        const stillApproved = await verifyAccess(userId);
        if (!stillApproved) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—ë—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω
const black = document.createElement('div');
Object.assign(black.style, {
    position: 'fixed', top: 0, left: 0, width: '100%', height: '100%',
    backgroundColor: 'black', color: 'red', zIndex: 99999999,
    display: 'flex', justifyContent: 'center', alignItems: 'center',
    fontSize: '24px', fontFamily: 'monospace'
});
black.innerHTML = '‚õî –ü–û–î–ü–ò–°–ö–ê –û–¢–û–ó–í–ê–ù–ê<br>–°–ö–†–ò–ü–¢ –û–¢–ö–õ–Æ–ß–Å–ù';
document.body.appendChild(black);

// –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–π–º–µ—Ä—ã –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
let id = window.setTimeout(() => {}, 0);
while (id--) {
    clearTimeout(id);
    clearInterval(id);
}

// –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã
document.querySelectorAll('script').forEach(s => s.remove());

// –û—á–∏—â–∞–µ–º localStorage, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å–Ω–æ–≤–∞ –ø–æ–ø—Ä–æ—Å–∏–ª–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
localStorage.removeItem('nerest_discord_id');

// –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
throw new Error("Access revoked");
        }
    } catch (err) {
        console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞:", err);
    }
}, 10000); // –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫
            } else {
                statusEl.innerHTML = `
                    ‚ùå –í–∞—à Discord ID –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞<br><br>
                    <code style="font-size: 20px; background: #222; padding: 10px; border-radius: 8px;">${userId}</code><br><br>
                    üõ† –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
                `;
            }
        } catch (err) {
            statusEl.innerHTML = `
                ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:<br><br>
                <code style="font-size: 16px; background: #300; padding: 10px; border-radius: 8px;">${err.message}</code><br><br>
                –í–∞—à Discord ID:<br>
                <code style="font-size: 20px; background: #222; padding: 10px; border-radius: 8px;">${userId}</code>
            `;
        }
    }
    // üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ F12, Ctrl+Shift+I, Ctrl+U –∏ –¥—Ä—É–≥–∏—Ö
document.addEventListener('keydown', function (e) {
    if (
        e.key === 'F12' ||
        (e.ctrlKey && e.shiftKey && (e.key === 'I' || e.key === 'J' || e.key === 'C')) ||
        (e.ctrlKey && e.key === 'U')
    ) {
        e.preventDefault();
        e.stopPropagation();
        alert("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω");
        return false;
    }
});
    run();
})();
